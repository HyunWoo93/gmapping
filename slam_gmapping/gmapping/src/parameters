*******************************************ROS topics************************************************

Subscribes to (name/type):

- "scan"/<a href="../../sensor_msgs/html/classstd__msgs_1_1LaserScan.html">sensor_msgs/LaserScan</a> : data from a laser range scanner 

- "/tf": odometry from the robot


Publishes to (name/type):

"/tf"/tf/tfMessage: position relative to the map

********************************************services***********************************************

 - "~dynamic_map" : returns the map

*******************************************ROS parameters*********************************************


Reads the following parameters from the parameter server

/////////////GMapping wrapper////////////

-  "~throttle_scans": @b [int] throw away every nth laser scan
-  "~base_frame": @b [string] the tf frame_id to use for the robot base pose
-  "~map_frame": @b [string] the tf frame_id where the robot pose on the map is published
-  "~odom_frame": @b [string] the tf frame_id from which odometry is read
-  "~map_update_interval": @b [double] time in seconds between two recalculations of the map


///////////////GMapping//////////////////


Laser Parameters:

-  "~/maxRange" @b [double] maximum range of the laser scans. Rays beyond this range get discarded completely. (default: maximum laser range minus 1 cm, as received in the the first LaserScan message)
-  "~/maxUrange" @b [double] maximum range of the laser scanner that is used for map building (default: same as maxRange)

-  "~/sigma" @b [double] standard deviation for the scan matching process (cell)
-  "~/kernelSize" @b [int] search window for the scan matching process
-  "~/lstep" @b [double] initial search step for scan matching (linear)
-  "~/astep" @b [double] initial search step for scan matching (angular)
-  "~/iterations" @b [int] number of refinement steps in the scan matching. The final "precision" for the match is lstep*2^(-iterations) or astep*2^(-iterations), respectively.
-  "~/lsigma" @b [double] standard deviation for the scan matching process (single laser beam)
-  "~/ogain" @b [double] gain for smoothing the likelihood
-  "~/lskip" @b [int] take only every (n+1)th laser ray for computing a match (0 = take all rays)
-  "~/minimumScore" @b [double] minimum score for considering the outcome of the scanmatching good. Can avoid 'jumping' pose estimates in large open spaces when using laser scanners with limited range (e.g. 5m). (0 = default. Scores go up to 600+, try 50 for example when experiencing 'jumping' estimate issues)



Motion Model Parameters (all standard deviations of a gaussian noise model)

-  "~/srr" @b [double] linear noise component (x and y)
-  "~/stt" @b [double] angular noise component (theta)
-  "~/srt" @b [double] linear -> angular noise component
-  "~/str" @b [double] angular -> linear noise component




Others:

-  "~/linearUpdate" @b [double] the robot only processes new measurements if the robot has moved at least this many meters
-  "~/angularUpdate" @b [double] the robot only processes new measurements if the robot has turned at least this many rads

-  "~/resampleThreshold" @b [double] threshold at which the particles get resampled. Higher means more frequent resampling.
-  "~/particles" @b [int] (fixed) number of particles. Each particle represents a possible trajectory that the robot has traveled



Likelihood sampling (used in scan matching)
	
-  "~/llsamplerange" @b [double] linear range
-  "~/lasamplerange" @b [double] linear step size
-  "~/llsamplestep" @b [double] linear range
-  "~/lasamplestep" @b [double] angular step size



Initial map dimensions and resolution:

-  "~/xmin" @b [double] minimum x position in the map [m]
-  "~/ymin" @b [double] minimum y position in the map [m]
-  "~/xmax" @b [double] maximum x position in the map [m]
-  "~/ymax" @b [double] maximum y position in the map [m]
-  "~/delta" @b [double] size of one pixel [m]


